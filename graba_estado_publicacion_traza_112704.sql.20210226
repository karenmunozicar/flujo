CREATE OR REPLACE FUNCTION public.graba_estado_publicacion_traza_112704(character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE
    xml1        alias for $1;
    xml2        varchar;
        data1   varchar;
	sts1	varchar;
	publicado1	varchar;
	xml3	varchar;
BEGIN
	xml2:=xml1;
	--Volvemos los &&& a los ###
	xml2:=replace(xml2,'&&&','###');
	--xml2 := logapp(xml2,'graba_estado_publicacion_traza_112704 '||replace(xml2,'###','&&&'));
        xml2 := put_campo(xml2,'__SECUENCIAOK__','0');
        --Cambio la respuesta de cuadratura por la respuesta original
	xml2:=put_campo(xml2,'COMENTARIO_TRAZA','');
	xml2:=put_campo(xml2,'COMENTARIO2','');
	--JSE Se agrega canal para guardar evento Publicado.
	if (get_campo('SCRIPT_NAME',xml2) in ('/ca4/ca4rec','/ca4/recmotor')) then
		xml2:=put_campo(xml2,'CANAL','RECIBIDOS');
		xml2:=put_campo(xml2,'RUT_OWNER',get_campo('RUT_RECEPTOR',xml2));
	else 
		 xml2:=put_campo(xml2,'CANAL','EMITIDOS');
		xml2:=put_campo(xml2,'RUT_OWNER',get_campo('RUT_EMISOR',xml2));
	end if;
	xml2 := graba_bitacora(xml2,'PUB');
        --Para no perder los datos del XML2 solo contestamos lo que se necesita saber
	xml3:='';	
        xml3 := put_campo(xml3,'__PUBLICADO_OK__','SI');
        xml3 := put_campo(xml3,'_LOG_',get_campo('_LOG_',xml2));
	--Se necesita devolver la fecha para grabar en cuadratura antigua
	xml3 := put_campo(xml3,'FECHA_EVENTO_PUB',get_campo('FECHA_EVENTO_PUB',xml2));
        return xml3;
END;
$function$
