delete from isys_querys_tx where llave='7010';

insert into isys_querys_tx values ('7010',10,1,1,'select proc_procesa_bitacora_7010(''$$__XMLCOMPLETO__$$'') as __xml__',0,0,0,1,1,-1,0);


insert into isys_querys_tx values ('7010',12,11,1,'select proc_procesa_bitacora_7010(''$$__XMLCOMPLETO__$$'') as __xml__',0,0,0,1,1,-1,0);
--Copia desde Traza Antigua registro de la URI
insert into isys_querys_tx values ('7010',20,1,10,'/opt/acepta/motor/Procesos/copia_registro_traza_antigua.sh $$URI_IN$$ $$TABLA_TRAZA$$',0,0,0,1,1,10,10);


CREATE or replace FUNCTION proc_procesa_bitacora_7010(varchar) RETURNS varchar AS $$
DECLARE
	xml1	alias for $1;
	xml2	varchar;
	data1	varchar;
        temp    integer;
	resp1	varchar;
	respuesta1	varchar;
	output1 varchar;
	query1  varchar;
	url1    varchar;
	query2  varchar;
	header1 varchar;
	jsonq	varchar;
	relacionados1 varchar;
	mes1	varchar;
	dominio1	varchar;
	fecha1		varchar;
	tabla_traza1	varchar;
	total1	integer;
	xml4	varchar;
	json1	json;
	json2	json;
	t2	timestamp;
	t1	timestamp;
	json_par1	json;
BEGIN

	xml2:=xml1;
	
	--FAY 2015-04-09 Si la base de replica esta OK vamos a hacer esta consulta a esa base
	/*
	if (verifica_base_replica()='OK') then
		xml2	:=logapp(xml2,'Se Procesa en base de replica');
		xml2	:=put_campo(xml2,'__SECUENCIAOK__','12');
		return xml2;
	end if;
	*/

	--Si viene de respuesta de Traza Antigua, mostramos que hizo
	if get_campo('BUSCA_TRAZA_ANTIGUA',xml2)='SI' then
		xml2:=logapp(xml2,'Respuesta Traza Antigua '||get_campo('RESPUESTA_SYSTEM',xml2));
	end if;
	--xml2:=logapp(xml2,'comienzo_bitacora_get_datos');	
    	data1	:=get_campo('INPUT',xml2);
	xml2	:=put_campo(xml2,'__SECUENCIAOK__','0');
	--url del documento a obtener
	if (strpos(data1,'url=')>0) then
		url1:= split_part(data1,'url=',2);
	end if; 
	xml2:=logapp(xml2,'URI='||url1);
	xml2:=put_campo(xml2,'URI_IN',url1);

	dominio1:=split_part(split_part(url1,'//',2),'.',1);
	fecha1:=substring(dominio1,length(dominio1)-3,4);	
	if (is_number(fecha1)) then
		--A partir de esta fecha todo es traza antigua
		if (fecha1::integer<1309) then
			--Buscamons en traza antigua
			xml2 := get_parametros_motor(xml2,'TRAZA_ANTIGUA');
			json1:=query_db_json(get_campo('__IP_CONEXION_CLIENTE__',xml2),get_campo('__IP_PORT_CLIENTE__',xml2)::integer,'select proc_get_traza_antigua('''||url1||''')');
			if (get_json('STATUS',json1)='OK') then
				query1:=get_json('proc_get_traza_antigua',json1);
				xml2:=logapp(xml2,'respuesta traza antigua'||query1);
       				resp1:='Status: 200 OK'||chr(10)||
		                 'Content-type: application/json;charset=UTF-8;'||chr(10)||
		                 'Content-length: '||length(query1)||chr(10);
				xml2:=put_campo(xml2,'RESPUESTA',resp1||chr(10)||query1);
				xml2 := put_campo(xml2,'__SOCKET_RESPONSE__','RESPUESTA');
			    	RETURN xml2;
			end if;
		end if;
	end if;

	tabla_traza1:=get_tabla_traza(url1);

	
	--Si la tabla traza es traza.traza o traza.traza_1401, entonces nos vamos a amazon RDS para sacar la info
	if (tabla_traza1 in ('traza.traza','traza.traza_1401','traza.traza_1402','traza.traza_1403','traza.traza_1404','traza.traza_1405','traza.traza_1406','traza.traza_1407','traza.traza_1408','traza.traza_1409','traza.traza_1410','traza.traza_1501','traza.traza_1411','traza.traza_1502','traza.traza_1412','traza.traza_1503','traza.traza_1504','traza.traza_1505','traza.traza_1506','traza.traza_1507')) then
		--xml2:=logapp(xml2,'REMOTO: Vamos Traza a motor.cv7s4kltouy4.us-east-1.rds.amazonaws.com');
		xml2:=logapp(xml2,'REMOTO: Vamos Traza a proxy_amazon_netglobalis.rds.amazonaws.com');
		xml4:='';
		xml4:=put_campo(xml4,'INPUT','url='||url1);
		--Armamos paquete para ir a amazon a traves del proxy
		--select query_db_json('172.16.10.91','8015','select proc_procesa_bitacora_7010(''INPUT[]=url=http://cencosudretail1409.acepta.com/v01/B6F70B486825F5F6F9AE3277EA1B89D7DDC6859E?k=2ac44a1b7d60b807bc294cf84e29995b###TABLA_TRAZA[]=traza_global###'')')
		t1:=clock_timestamp();
		if (tabla_traza1 in ('traza.traza_1501','traza.traza_1502','traza.traza_1503','traza.traza_1504','traza.traza_1505','traza.traza_1506','traza.traza_1507')) then
			begin
				
				json_par1:=get_parametros_motor_json('{}','TRAZA_2015');
				json1:=query_db_json(get_json('__IP_CONEXION_CLIENTE__',json_par1),get_json('__IP_PORT_CLIENTE__',json_par1)::integer,'select proc_procesa_bitacora_7010_Amazon('||quote_literal(xml4)||')');
			EXCEPTION WHEN OTHERS THEN
				xml2:=logapp(xml2,'REMOTO: 1ERROR EN JSON Respuesta='||coalesce(json1::varchar,'NULO'));
			end;
		else
			json_par1:=get_parametros_motor_json('{}','TRAZA_2014');
			json1:=query_db_json(get_json('__IP_CONEXION_CLIENTE__',json_par1),get_json('__IP_PORT_CLIENTE__',json_par1)::integer,'select proc_procesa_bitacora_7010_Amazon('||quote_literal(xml4)||')');
		end if;
		t2:=clock_timestamp();
		begin
			json2:=get_json('proc_procesa_bitacora_7010_amazon',json1);
		EXCEPTION WHEN OTHERS THEN
			xml2:=logapp(xml2,'REMOTO: ERROR EN JSON Respuesta='||coalesce(json1::varchar,'NULO'));
			--Buscamons en traza antigua
			xml2 := get_parametros_motor(xml2,'TRAZA_ANTIGUA');
			json1:=query_db_json(get_campo('__IP_CONEXION_CLIENTE__',xml2),get_campo('__IP_PORT_CLIENTE__',xml2)::integer,'select proc_get_traza_antigua('''||url1||''')');
			if (get_json('STATUS',json1)='OK') then
				query1:=get_json('proc_get_traza_antigua',json1);
				xml2:=logapp(xml2,'respuesta traza antigua'||query1);
       				resp1:='Status: 200 OK'||chr(10)||
		                 'Content-type: application/json;charset=UTF-8;'||chr(10)||
		                 'Content-length: '||length(query1)||chr(10);
				xml2:=put_campo(xml2,'RESPUESTA',resp1||chr(10)||query1);
				xml2 := put_campo(xml2,'__SOCKET_RESPONSE__','RESPUESTA');
			    	RETURN xml2;
			end if;
		end;
		
		xml2:=logapp(xml2,'REMOTO: Respuesta='||json2::varchar);

        	resp1:='Status: 200 OK'||chr(10)||
                	 'Content-type: application/json;charset=UTF-8;'||chr(10)||
	                 'Content-length: '||length(json2::varchar)||chr(10);
		xml2:=put_campo(xml2,'RESPUESTA',resp1||chr(10)||json2::varchar);
		xml2 := put_campo(xml2,'__SOCKET_RESPONSE__','RESPUESTA');
		xml2:=logapp(xml2,'REMOTO: Fin Llamada  Tiempo='||(t2-t1)::varchar);
		return xml2;	
	

		--xml2:=query_remoto_c('proxy_amazon_netglobalis.rds.amazonaws.com','5432','traza','motor','motoracepta','select proc_procesa_bitacora_7010('||quote_literal(xml2)||')',xml2);
		--json1:=query_db_json('172.16.10.91','8015','select proc_procesa_bitacora_7010('||quote_literal(xml4)||')');


		--xml2:=query_remoto_c('motor.cv7s4kltouy4.us-east-1.rds.amazonaws.com','5432','traza','motor','motoracepta','select proc_procesa_bitacora_7010('||quote_literal(xml2)||')',xml2);
		--xml2:=logapp(xml2,'REMOTO: Fin Llamada Respuesta='||replace(replace(xml2,'###','&&&'),chr(10),'\n')||' Tiempo='||(t2-t1)::varchar);
		--return xml2;
	end if;

	xml2:=put_campo(xml2,'TABLA_TRAZA',tabla_traza1);
	xml2:=logapp(xml2,'Tabla Traza '||tabla_traza1);

	execute 'select row_to_json(head) FROM (select to_char(coalesce(fecha_ingreso,fecha),''YYYY-MM-DD HH24:MI:SS'') as nodeTimeStamp,replace(folio,''-'','''') as nodeId,cfg.descripcion1 as nodeLabel,trz.rut_emisor||''-''||modulo11(trz.rut_emisor::varchar) as noOwnerUid,case when recipient.name is null then (select nombre from contribuyentes where rut_emisor=trz.rut_emisor limit 1) else recipient.name end as noOwner,recipient.email as noOwnerMail,receptor.rut||''-''||modulo11(receptor.rut::varchar) as ownerUid,receptor.name||''.'' as owner,case when receptor.recipt_type is null then ''(receptor manual)'' when receptor.recipt_type=''M'' then ''(receptor manual)'' else receptor.email end as ownerMail,cfg.icono as nodeIcon, cfg2.descripcion1 as eventoemisor,
--Si es un libro de compras, la fecha de emision viene en el folio
case tipo_dte when ''COMPRA'' then (replace(folio,''-'','''')||''01'')::integer 
	      when ''VENTA'' then  (replace(folio,''-'','''')||''01'')::integer
else to_char(coalesce(fecha_ingreso,fecha),''YYYYMMDD'')::integer end as timeStamp from (select * from '||tabla_traza1||' where  uri= $1 and length(folio)>0 and fecha_emision>0 order by fecha_ingreso limit 1) trz left join recipient_traza_historico recipient  on trz.rut_emisor= recipient.rut left join recipient_traza_historico receptor on receptor.rut=trz.rut_receptor left join traza.config cfg on trz.tipo_dte=cfg.evento left join traza.config cfg2 on cfg2.evento=trz.evento ) head' into header1 using url1;

	--Si no hay header y la uri es antigua buscamos en traza old
	if (header1 is null) then
	end if;	

	xml2:=logapp(xml2,'header1='||header1);
	xml2:=logapp(xml2,'head='||header1);
	
	--listado de documentos relacionados
	relacionados1 := array_to_json(array_agg(row_to_json(related))) from (select r.folio, cfg.descripcion1 as tipodte, r.url_relacion as url, cfg.icono  from (select * from documentos_relacionados where url = url1 ) r left join traza.config cfg  on r.tipo_dte = cfg.evento ) related;
	xml2:=logapp(xml2,'relacionados1='||relacionados1);

	execute 'select array_to_json(array_agg(row_to_json(r))) from (SELECT to_char(fecha,''YYYY-MM-DD HH24:MI:SS'') as processedDate,canal,grupo,descripcion1 as description,comentario1 as comment2,comentario2 as commentFragment ,icono as icon ,url_get as url  from (select distinct fecha,rut_emisor,canal,comentario1||case when comentario_erp is null then '''' else chr(10)||comentario_erp end as comentario1,comentario2,url_get,evento from '||tabla_traza1||' where uri= $1  and evento <>''EMI'') trz join traza.config on trz.evento=traza.config.evento left join recipient_traza_historico recipient  on trz.rut_emisor=recipient.rut  order by orden,fecha) r' into query2 using url1;
	xml2:=logapp(xml2,'Eventos='||query2);
	

	--se ordenan las queris en un arreglo json, el primer elemento es la info de cabecera, el segundo un arreglo con los eventos
	--si una query no arroja resultados se envia arreglo vacio.
	query1 := '[';
	IF (header1 IS NOT NULL) THEN
		query1:=query1||header1||',';
	END IF;
	IF (relacionados1 IS NOT NULL) THEN
		query1 := query1||relacionados1||',';
	ELSE
		query1 := query1||'[],';
	END IF;
	IF (query2 IS NOT NULL) THEN
		query1:= query1 || query2;
	END IF;

	query1 := query1 || ']';

	xml2:=logapp(xml2,'respuesta query'||query1);
	--envio respuesta content tipe para json es application/json, en otro caso la respuesta llega como error
        resp1:='Status: 200 OK'||chr(10)||
                 'Content-type: application/json;charset=UTF-8;'||chr(10)||
                 'Content-length: '||length(query1)||chr(10);
	xml2:=put_campo(xml2,'RESPUESTA',resp1||chr(10)||query1);
	--xml2:=put_campo(xml2,'RESPUESTA',query1);
	xml2 := put_campo(xml2,'__SOCKET_RESPONSE__','RESPUESTA');
        xml2 := logapp(xml2,'Respuesta Servicio 200 OK');
	xml2 := logapp(xml2,'JSONSend '||query1);
	xml2 := logapp(xml2,'fin_bitacora_get_datos');
    	RETURN xml2;
	
END;
$$ LANGUAGE plpgsql;
