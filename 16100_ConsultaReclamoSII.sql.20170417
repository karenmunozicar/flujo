--Consulta Estado Reclamo SII
delete from isys_querys_tx where llave='16100';

insert into isys_querys_tx values ('16100',10,1,1,'select armo_reclamo_sii_16100(''$$__XMLCOMPLETO__$$'') as __xml__',0,0,0,1,1,-1,0);
insert into isys_querys_tx values ('16100',20,1,2,'Servicio de SII 172.16.14.88',4013,100,101,0,0,30,30);
insert into isys_querys_tx values ('16100',30,1,1,'select proceso_reclamo_sii_16100(''$$__XMLCOMPLETO__$$'') as __xml__',0,0,0,1,1,1000,1000);
insert into isys_querys_tx values ('16100',1000,19,1,'select sp_procesa_respuesta_cola_motor88_json(''$$__JSONCOMPLETO__$$'') as __json__',0,0,0,1,1,0,0);

CREATE or replace FUNCTION armo_reclamo_sii_16100(varchar) RETURNS varchar AS $$
DECLARE
        xml1   alias for $1;
        xml2   varchar;

        json_in json;

        v_rutEmisor     varchar;
        v_dvEmisor      varchar;
        v_tipo_dte      varchar;
        v_folio         varchar;

        v_canal         varchar;
        json_out        json;
        json_script1    json;
        ws_codResp      varchar;
        ws_descResp     varchar ;
        ws_json         json;

        i integer;
        aux     varchar;
        aux2    json;

        ws_codEvento    varchar;
        ws_descEvento   varchar;
        te_estado       varchar;
        te_fecha        varchar;
BEGIN
	xml2:=xml1;

        v_rutEmisor:=get_campo('RUT_EMISOR',xml2);
        v_dvEmisor:=modulo11(v_rutEmisor);
        v_tipo_dte:=get_campo('TIPO_DTE',xml2);
        v_folio:=get_campo('FOLIO',xml2);
        v_canal:=get_campo('CANAL',xml2);


        json_in:='{"rutEmisor":"'||v_rutEmisor::varchar||'","dvEmisor":"'||v_dvEmisor::varchar||'","tipoDoc":"'||v_tipo_dte::varchar||'","folio":"'||v_folio::varchar||'"}';
	perform logfile('F_16100 '||json_in::varchar);
	xml2 := put_campo(xml2,'__SECUENCIAOK__','20');
        xml2:=get_parametros_motor(xml2,'SERVICIO_SII_JSON');
        xml2:=put_campo(xml2,'INPUT','POST /lista_eventos_docto HTTP/1.1'||chr(10)||'User-Agent: curl/7.26.0'||chr(10)||'Host: '||get_campo('__IP_CONEXION_CLIENTE__',xml2)||':'||get_campo('__IP_PORT_CLIENTE__',xml2)||chr(10)||'Accept: '||chr(42)||'/'||chr(42)||chr(10)||'Content-Type: application/json; charset=ISO-8859-1'||chr(10)||'Content-Length: '||length(json_in::varchar)::varchar||chr(10)||chr(10)||json_in::varchar);
	return xml2;
END;
$$ LANGUAGE plpgsql;

CREATE or replace FUNCTION proceso_reclamo_sii_16100(varchar) RETURNS varchar AS $$
DECLARE
        xml1   alias for $1;
        xml2 varchar;
        xml3 varchar;

        json_in json;

        v_rutEmisor     varchar;
        v_dvEmisor      varchar;
        v_tipo_dte      varchar;
        v_folio         varchar;

        v_canal         varchar;
        v_cod_txel      bigint;
        v_flag_escritorio       varchar;
        json_out        json;
        json_script1    json;
        ws_codResp      varchar;
        ws_descResp     varchar ;
        ws_json         json;

        i integer;
        aux     varchar;
        aux2    json;

        ws_codEvento    varchar;
        ws_descEvento   varchar;
        te_estado       varchar;
        te_fecha        varchar;
	resp1	varchar;
	evento1	varchar;
BEGIN
	xml2:=xml1;
	resp1:=get_campo('RESPUESTA',xml2);
	perform logfile('DAO_SII '||resp1);
	xml2 :=put_campo(xml2,'__SECUENCIAOK__','1000');	
	xml2:=logapp(xml2,'ENTRO a proceso_reclamo_sii_16100');
	if(strpos(resp1,'HTTP/1.0 200')=0) then
                xml2:=put_campo(xml2,'RESPUESTA','Status: 400 NK');
		return xml2;
	end if;
	
	xml2:=logapp(xml2,'SII_RESPONDE F_16100 '||split_part(resp1,chr(10)||chr(10),2));
	json_out:=split_part(resp1,chr(10)||chr(10),2)::json;
	ws_codResp:=get_json('codResp',json_out::json);
        ws_descResp:=get_json('descResp',json_out::json);
        v_cod_txel:=get_campo('CODIGO_TXEL',xml2);
        v_flag_escritorio:=get_campo('__FLAG_PUB_10K__',xml2);

        xml2:=logapp(xml2,'*************** RESPUESTA WS ***************** '||json_out::varchar);
        xml2:=logapp(xml2,'*************** COD_RESPUESTA_WS => '||ws_codResp::varchar);
        xml2:=logapp(xml2,'*************** DESC_RESPUESTA_WS => '||ws_descResp::varchar);
	--Si no tiene reclamo
        if(ws_codResp='16') then
                xml2 :=put_campo(xml2,'RESPUESTA','Status: 200 OK');
		--Se graba evento de que no tiene reclamo...por ahora
		xml3:='';
		xml3:=put_campo(xml3,'FECHA_EMISION',get_campo('FECHA_EMISION',xml2));
		xml3:=put_campo(xml3,'RUT_EMISOR',get_campo('RUT_EMISOR',xml2));
		xml3:=put_campo(xml3,'RUT_OWNER',get_campo('RUT_EMISOR',xml2));
		xml3:=put_campo(xml3,'FECHA_EVENTO',now()::varchar);
		xml3:=put_campo(xml3,'RUT_RECEPTOR',get_campo('RUT_RECEPTOR',xml2));
		xml3:=put_campo(xml3,'FOLIO',get_campo('FOLIO',xml2));
		xml3:=put_campo(xml3,'TIPO_DTE',get_campo('TIPO_DTE',xml2));
		xml3:=put_campo(xml3,'CANAL','EMITIDOS');
		xml3:=put_campo(xml3,'URI_IN',get_campo('URI_IN',xml2));
		xml3:=put_campo(xml3,'COMENTARIO_TRAZA','Glosa: '||ws_descResp::varchar);
		xml3:=graba_bitacora(xml3,'SIN_RECLAMO_SII');
		xml2:=logapp(xml2,get_campo('_LOG_',xml3));
					
		update dte_emitidos set estado_reclamo='SIN_RECLAMO_SII',fecha_reclamo=now(),mensaje_reclamo=ws_descResp where codigo_txel=v_cod_txel::bigint and coalesce(estado_reclamo,'') in ('','SIN_RECLAMO_SII');
		return xml2;
	--Si no tiene permisos
        elsif(ws_codResp='14') then
                xml2 :=put_campo(xml2,'RESPUESTA','Status: 200 OK');
                --Se graba evento de que no tiene reclamo...por ahora
                xml3:='';
                xml3:=put_campo(xml3,'FECHA_EMISION',get_campo('FECHA_EMISION',xml2));
                xml3:=put_campo(xml3,'RUT_EMISOR',get_campo('RUT_EMISOR',xml2));
                xml3:=put_campo(xml3,'RUT_OWNER',get_campo('RUT_EMISOR',xml2));
                xml3:=put_campo(xml3,'FECHA_EVENTO',now()::varchar);
                xml3:=put_campo(xml3,'RUT_RECEPTOR',get_campo('RUT_RECEPTOR',xml2));
                xml3:=put_campo(xml3,'FOLIO',get_campo('FOLIO',xml2));
                xml3:=put_campo(xml3,'TIPO_DTE',get_campo('TIPO_DTE',xml2));
                xml3:=put_campo(xml3,'CANAL','EMITIDOS');
                xml3:=put_campo(xml3,'URI_IN',get_campo('URI_IN',xml2));
                xml3:=put_campo(xml3,'COMENTARIO_TRAZA','Consulta Reclamos: '||ws_descResp::varchar);
                xml3:=graba_bitacora(xml3,'SIN_PERMISOS_SII');
                xml2:=logapp(xml2,get_campo('_LOG_',xml3));

                update dte_emitidos set estado_reclamo='SIN_PERMISOS_SII',fecha_reclamo=now(),mensaje_reclamo=ws_descResp where codigo_txel=v_cod_txel::bigint and coalesce(estado_reclamo,'') in ('','SIN_PERMISOS_SII');
                return xml2;

        elsif(ws_codResp='15') then
                ws_json:=get_json('listaEventosDoc',json_out::json);
                --json2:=logjson(json2,'*************** JSON_RESPUESTA_WS => '||ws_json::varchar);
                -- cuento los eventos
                i:=0;
                aux:=get_json_index(ws_json::json,i);
                -- recorro los eventos
                while length(aux) > 0 loop
                        aux2:=aux::json;
                        i:=i+1;
                        aux:=get_json_index(ws_json::json,i);
                        ws_codEvento:=get_json('codEvento',aux2::json);
                        ws_descEvento:=get_json('descEvento',aux2::json);
                        -- Solo respondo desc del reclamo/aceptacion
			if(ws_codEvento in ('ACD','ERM')) then
				evento1:=ws_codEvento;
				if(ws_codEvento='ACD') then
					te_estado:='ACEPTACION_DE_CONTENIDO_DE_DOCUMENTO';
					te_fecha:=get_json('fechaEvento',aux2::json);
					--Se actualiza si no estaba actualizado
					update dte_emitidos set estado_nar=te_estado,fecha_nar=to_timestamp(te_fecha,'DD-MM-YYYY HH24:MI:SS'),mensaje_nar=aux2::varchar where codigo_txel=v_cod_txel::bigint and coalesce(estado_nar,'')<>te_estado;
				else
					te_estado:='OTORGA_RECIBO_DE_MERCADERIA_O_SERVICIO';
					te_fecha:=get_json('fechaEvento',aux2::json);
					update dte_emitidos set estado_reclamo=te_estado,fecha_reclamo=to_timestamp(te_fecha,'DD-MM-YYYY HH24:MI:SS'),mensaje_reclamo=aux2::varchar where codigo_txel=v_cod_txel::bigint and coalesce(estado_reclamo,'')<>te_estado;
				end if;
				-- ACTUALIZAMOS EL ESTADO DEL DOCUMENTO EN DTE_EMITIDOS
			elsif (ws_codEvento in ('RCD','RFP','RFT')) then
				evento1:=ws_codEvento;
				if(ws_codEvento='RCD') then
					te_estado:='RECHAZO_DE_CONTENIDO_DE_DOCUMENTO';
					te_fecha:=get_json('fechaEvento',aux2::json);
					update dte_emitidos set estado_nar=te_estado,fecha_nar=to_timestamp(te_fecha,'DD-MM-YYYY HH24:MI:SS'),mensaje_nar=aux2::varchar where codigo_txel=v_cod_txel::bigint and coalesce(estado_nar,'')<>te_estado;
				elsif(ws_codEvento='RFP') then
					te_estado:='RECLAMO_FALTA_PARCIAL_DE_MERCADERIA';
					te_fecha:=get_json('fechaEvento',aux2::json);
					update dte_emitidos set estado_reclamo=te_estado,fecha_reclamo=to_timestamp(te_fecha,'DD-MM-YYYY HH24:MI:SS'),mensaje_reclamo=aux2::varchar where codigo_txel=v_cod_txel::bigint and coalesce(estado_reclamo,'')<>te_estado;
				else
					te_estado:='RECLAMO_FALTA_TOTAL_DE_MERCADERIA';
					te_fecha:=get_json('fechaEvento',aux2::json);
					update dte_emitidos set estado_reclamo=te_estado,fecha_reclamo=to_timestamp(te_fecha,'DD-MM-YYYY HH24:MI:SS'),mensaje_reclamo=aux2::varchar where codigo_txel=v_cod_txel::bigint and coalesce(estado_reclamo,'')<>te_estado;
				end if;
			end if;
			if(evento1 is not null) then
				xml3:='';
				xml3:=put_campo(xml3,'FECHA_EMISION',get_campo('FECHA_EMISION',xml2));
				xml3:=put_campo(xml3,'RUT_EMISOR',get_campo('RUT_EMISOR',xml2));
				xml3:=put_campo(xml3,'RUT_OWNER',get_campo('RUT_EMISOR',xml2));
				xml3:=put_campo(xml3,'FECHA_EVENTO',now()::varchar);
				xml3:=put_campo(xml3,'RUT_RECEPTOR',get_campo('RUT_RECEPTOR',xml2));
				xml3:=put_campo(xml3,'FOLIO',get_campo('FOLIO',xml2));
				xml3:=put_campo(xml3,'TIPO_DTE',get_campo('TIPO_DTE',xml2));
				xml3:=put_campo(xml3,'CANAL','EMITIDOS');
				xml3:=put_campo(xml3,'URI_IN',get_campo('URI_IN',xml2));
				xml3:=put_campo(xml3,'COMENTARIO_TRAZA','Glosa: '||ws_descEvento::varchar);
				xml3:=graba_bitacora(xml3,evento1);
				xml2:=logapp(xml2,get_campo('_LOG_',xml3));
				xml2 :=put_campo(xml2,'RESPUESTA','Status: 200 OK');
			else
				xml2 :=put_campo(xml2,'MENSAJE_XML_FLAGS','-COD='||ws_codEvento||' DESC='||ws_descEvento);
				xml2 :=put_campo(xml2,'RESPUESTA','Status: 444 NK');
			end if;
		end loop;
	else
		xml2 :=put_campo(xml2,'MENSAJE_XML_FLAGS','COD='||ws_codResp||' DESC='||ws_descResp);
		xml2 :=put_campo(xml2,'RESPUESTA','Status: 444 NK');
        end if;
	return xml2;
END;
$$ LANGUAGE plpgsql;

CREATE or replace FUNCTION insert_cola_reclamo_sii_emi_16100(varchar,varchar,varchar,varchar,varchar,varchar) RETURNS varchar AS $$
DECLARE
	codigo_txel1	alias for $1;
	rut_emisor1	alias for $2;
	tipo_dte1	alias for $3;
	folio1		alias for $4;
	rut_receptor1	alias for $5;
	uri1		alias for $6;
	xml3	varchar;
	id1	bigint;
	tx1	varchar;
	nombre_tabla1	varchar;
	query1	varchar;
	cola1	varchar;
BEGIN
                xml3:='';
                xml3:=put_campo(xml3,'TX','16100');
                xml3:=put_campo(xml3,'URI_IN',uri1);
                xml3:=put_campo(xml3,'CANAL','EMITIDOS');
                xml3:=put_campo(xml3,'RUT_EMISOR',rut_emisor1);
                xml3:=put_campo(xml3,'RUT_RECEPTOR',rut_receptor1);
                xml3:=put_campo(xml3,'TIPO_DTE',tipo_dte1);
                xml3:=put_campo(xml3,'FOLIO',folio1);
                xml3:=put_campo(xml3,'CODIGO_TXEL',codigo_txel1);
                cola1:=nextval('secuencia_recibidos_motor');
                tx1:='30';
                nombre_tabla1:='cola_motor_'||cola1::varchar;
                query1:='insert into ' || nombre_tabla1 || ' (fecha,uri,reintentos,data,tx,rut_emisor,reproceso,categoria, nombre_cola) values ( now(),'||quote_literal(uri1)||',9,'||quote_literal(xml3)||','||tx1||','||quote_literal(rut_emisor1::varchar)||',''NO'',''ESTADO_RECLAMO_SII'','|| quote_literal(nombre_tabla1) ||') returning id';
		execute query1 into id1;
		if id1 is not null then
                        return 'URI='||uri1||' se graba Evento para consultar Reclamo';
		else
			return 'FALLA';
                end if;
END;
$$ LANGUAGE plpgsql;

